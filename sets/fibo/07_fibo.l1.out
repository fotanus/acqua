1: assignJob 
"Adicionando then1 e dummy1"
"Adicionando back1"
"Adicionando back1"
----
0: receive ReqEnv
----
0: sending message for env copy
----
1: receive endCopy
----
1: NewClosure "closure" 2
----
1: SetClosureFn "closure" "_fn_0"
----
1: SetClosureMissingI "closure" 1
----
1: SetClosureCountI "closure" 1
----
1: SetClosureParamIL "closure" 0 "_fn_0"
----
1: AssignV "closure" "closure"
----
1: AssignI "param" 7
----
1: AssignI "one" 1
----
1: GetClosureMissing "closure" "missing"
----
1: GetClosureCount "closure" "count"
----
1: OP
----
1: AssignV "new_missing" "resp"
----
1: OP
----
1: AssignV "new_count" "resp"
----
1: SetClosureCount "closure" "new_count"
----
1: SetClosureMissing "closure" "new_missing"
----
1: SetClosureParam "closure" "count" "param"
----
1: OP
----
1: if resp goto then3( x = 1)
----
1: AssignV "var10" "closure"
----
1: call
2: assignJob 
----
1: goto
1: receive ReqEnv
----
1: Wait
1: sending message for env copy
----
2: receive update
1: sending message for env copy
----
2: receive update
1: sending message for env copy
----
2: receive endCopy
----
2: GetClosureParam "closure" 1 "x"
----
2: AssignV "var0" "x"
----
2: AssignI "var1" 2
----
2: OP
----
2: if resp goto then2( x = -5)
----
2: NewClosure "closure" 2
----
2: SetClosureFn "closure" "_fn_0"
----
2: SetClosureMissingI "closure" 1
----
2: SetClosureCountI "closure" 1
----
2: SetClosureParamIL "closure" 0 "_fn_0"
----
2: AssignV "closure" "closure"
----
2: AssignV "var2" "x"
----
2: AssignI "var3" 1
----
2: OP
----
2: AssignV "param" "resp"
----
2: AssignI "one" 1
----
2: GetClosureMissing "closure" "missing"
----
2: GetClosureCount "closure" "count"
----
2: OP
----
2: AssignV "new_missing" "resp"
----
2: OP
----
2: AssignV "new_count" "resp"
----
2: SetClosureCount "closure" "new_count"
----
2: SetClosureMissing "closure" "new_missing"
----
2: SetClosureParam "closure" "count" "param"
----
2: OP
----
2: if resp goto then0( x = 1)
----
2: AssignV "var4" "closure"
----
2: call
1: assignJob 
----
2: goto
2: receive ReqEnv
----
2: NewClosure "closure" 2
2: sending message for env copy
----
1: receive update
2: SetClosureFn "closure" "_fn_0"
2: sending message for env copy
----
1: receive update
2: SetClosureMissingI "closure" 1
2: sending message for env copy
----
1: receive endCopy
2: SetClosureCountI "closure" 1
----
1: GetClosureParam "closure" 1 "x"
2: SetClosureParamIL "closure" 0 "_fn_0"
----
1: AssignV "var0" "x"
2: AssignV "closure" "closure"
----
1: AssignI "var1" 2
2: AssignV "var5" "x"
----
2: AssignI "var6" 2
1: OP
----
1: if resp goto then2( x = -4)
2: OP
----
2: AssignV "param" "resp"
1: NewClosure "closure" 2
----
2: AssignI "one" 1
1: SetClosureFn "closure" "_fn_0"
----
1: SetClosureMissingI "closure" 1
2: GetClosureMissing "closure" "missing"
----
1: SetClosureCountI "closure" 1
2: GetClosureCount "closure" "count"
----
1: SetClosureParamIL "closure" 0 "_fn_0"
2: OP
----
1: AssignV "closure" "closure"
2: AssignV "new_missing" "resp"
----
1: AssignV "var2" "x"
2: OP
----
1: AssignI "var3" 1
2: AssignV "new_count" "resp"
----
1: OP
2: SetClosureCount "closure" "new_count"
----
1: AssignV "param" "resp"
2: SetClosureMissing "closure" "new_missing"
----
1: AssignI "one" 1
2: SetClosureParam "closure" "count" "param"
----
1: GetClosureMissing "closure" "missing"
2: OP
----
1: GetClosureCount "closure" "count"
2: if resp goto then1( x = 1)
----
2: AssignV "var7" "closure"
1: OP
----
1: AssignV "new_missing" "resp"
2: call
3: assignJob 
----
1: OP
2: goto
2: receive ReqEnv
----
1: AssignV "new_count" "resp"
2: Wait
2: sending message for env copy
----
1: SetClosureCount "closure" "new_count"
3: receive update
2: sending message for env copy
----
1: SetClosureMissing "closure" "new_missing"
3: receive update
2: sending message for env copy
----
1: SetClosureParam "closure" "count" "param"
3: receive endCopy
----
1: OP
3: GetClosureParam "closure" 1 "x"
----
3: AssignV "var0" "x"
1: if resp goto then0( x = 1)
----
1: AssignV "var4" "closure"
3: AssignI "var1" 2
----
1: call
3: OP
2: assignJob 
----
1: goto
1: receive ReqEnv
3: if resp goto then2( x = -3)
----
1: NewClosure "closure" 2
1: sending message for env copy
3: NewClosure "closure" 2
----
1: SetClosureFn "closure" "_fn_0"
2: receive update
1: sending message for env copy
3: SetClosureFn "closure" "_fn_0"
----
1: SetClosureMissingI "closure" 1
2: receive update
1: sending message for env copy
3: SetClosureMissingI "closure" 1
----
1: SetClosureCountI "closure" 1
2: receive endCopy
3: SetClosureCountI "closure" 1
----
1: SetClosureParamIL "closure" 0 "_fn_0"
2: GetClosureParam "closure" 1 "x"
3: SetClosureParamIL "closure" 0 "_fn_0"
----
1: AssignV "closure" "closure"
2: AssignV "var0" "x"
3: AssignV "closure" "closure"
----
1: AssignV "var5" "x"
2: AssignI "var1" 2
3: AssignV "var2" "x"
----
1: AssignI "var6" 2
3: AssignI "var3" 1
2: OP
----
1: OP
2: if resp goto then2( x = -3)
3: OP
----
1: AssignV "param" "resp"
3: AssignV "param" "resp"
2: NewClosure "closure" 2
----
1: AssignI "one" 1
3: AssignI "one" 1
2: SetClosureFn "closure" "_fn_0"
----
1: GetClosureMissing "closure" "missing"
2: SetClosureMissingI "closure" 1
3: GetClosureMissing "closure" "missing"
----
1: GetClosureCount "closure" "count"
2: SetClosureCountI "closure" 1
3: GetClosureCount "closure" "count"
----
1: OP
2: SetClosureParamIL "closure" 0 "_fn_0"
3: OP
----
1: AssignV "new_missing" "resp"
2: AssignV "closure" "closure"
3: AssignV "new_missing" "resp"
----
2: AssignV "var2" "x"
1: OP
3: OP
----
1: AssignV "new_count" "resp"
2: AssignI "var3" 1
3: AssignV "new_count" "resp"
----
1: SetClosureCount "closure" "new_count"
2: OP
3: SetClosureCount "closure" "new_count"
----
2: AssignV "param" "resp"
1: SetClosureMissing "closure" "new_missing"
3: SetClosureMissing "closure" "new_missing"
----
2: AssignI "one" 1
1: SetClosureParam "closure" "count" "param"
3: SetClosureParam "closure" "count" "param"
----
1: OP
2: GetClosureMissing "closure" "missing"
3: OP
----
1: if resp goto then1( x = 1)
2: GetClosureCount "closure" "count"
3: if resp goto then0( x = 1)
----
1: AssignV "var7" "closure"
3: AssignV "var4" "closure"
2: OP
----
2: AssignV "new_missing" "resp"
1: call
3: call
4: assignJob 
----
1: goto
2: OP
3: goto
3: receive ReqEnv
----
2: AssignV "new_count" "resp"
1: Wait
3: NewClosure "closure" 2
3: sending message for env copy
----
2: SetClosureCount "closure" "new_count"
3: SetClosureFn "closure" "_fn_0"
4: receive update
3: sending message for env copy
1: assignJob 
----
1: receive ReqEnv
2: SetClosureMissing "closure" "new_missing"
3: SetClosureMissingI "closure" 1
3: sending message for env copy
----
2: SetClosureParam "closure" "count" "param"
3: SetClosureCountI "closure" 1
4: receive update
4: receive endCopy
1: sending message for env copy
----
1: receive update
1: sending message for env copy
2: OP
3: SetClosureParamIL "closure" 0 "_fn_0"
4: GetClosureParam "closure" 1 "x"
----
3: AssignV "closure" "closure"
4: AssignV "var0" "x"
1: receive update
1: sending message for env copy
2: if resp goto then0( x = 1)
----
2: AssignV "var4" "closure"
3: AssignV "var5" "x"
4: AssignI "var1" 2
1: receive endCopy
----
3: AssignI "var6" 2
1: GetClosureParam "closure" 1 "x"
2: call
4: OP
----
1: AssignV "var0" "x"
2: goto
3: OP
4: if resp goto then2( x = -2)
----
1: AssignI "var1" 2
3: AssignV "param" "resp"
2: NewClosure "closure" 2
4: NewClosure "closure" 2
----
3: AssignI "one" 1
1: OP
2: SetClosureFn "closure" "_fn_0"
4: SetClosureFn "closure" "_fn_0"
----
1: if resp goto then2( x = -2)
2: SetClosureMissingI "closure" 1
3: GetClosureMissing "closure" "missing"
4: SetClosureMissingI "closure" 1
----
1: NewClosure "closure" 2
2: SetClosureCountI "closure" 1
3: GetClosureCount "closure" "count"
4: SetClosureCountI "closure" 1
----
1: SetClosureFn "closure" "_fn_0"
2: SetClosureParamIL "closure" 0 "_fn_0"
3: OP
4: SetClosureParamIL "closure" 0 "_fn_0"
----
2: AssignV "closure" "closure"
3: AssignV "new_missing" "resp"
4: AssignV "closure" "closure"
1: SetClosureMissingI "closure" 1
----
2: AssignV "var5" "x"
4: AssignV "var2" "x"
1: SetClosureCountI "closure" 1
3: OP
----
2: AssignI "var6" 2
3: AssignV "new_count" "resp"
4: AssignI "var3" 1
1: SetClosureParamIL "closure" 0 "_fn_0"
----
1: AssignV "closure" "closure"
2: OP
3: SetClosureCount "closure" "new_count"
4: OP
----
1: AssignV "var2" "x"
2: AssignV "param" "resp"
4: AssignV "param" "resp"
3: SetClosureMissing "closure" "new_missing"
----
1: AssignI "var3" 1
2: AssignI "one" 1
4: AssignI "one" 1
3: SetClosureParam "closure" "count" "param"
----
1: OP
2: GetClosureMissing "closure" "missing"
3: OP
4: GetClosureMissing "closure" "missing"
----
1: AssignV "param" "resp"
2: GetClosureCount "closure" "count"
3: if resp goto then1( x = 1)
4: GetClosureCount "closure" "count"
----
1: AssignI "one" 1
3: AssignV "var7" "closure"
2: OP
4: OP
----
2: AssignV "new_missing" "resp"
4: AssignV "new_missing" "resp"
1: GetClosureMissing "closure" "missing"
3: call
----
1: GetClosureCount "closure" "count"
2: OP
3: goto
4: OP
----
2: AssignV "new_count" "resp"
4: AssignV "new_count" "resp"
1: OP
3: Wait
----
1: AssignV "new_missing" "resp"
2: SetClosureCount "closure" "new_count"
4: SetClosureCount "closure" "new_count"
3: assignJob 
----
1: OP
2: SetClosureMissing "closure" "new_missing"
3: receive ReqEnv
4: SetClosureMissing "closure" "new_missing"
----
1: AssignV "new_count" "resp"
2: SetClosureParam "closure" "count" "param"
3: sending message for env copy
4: SetClosureParam "closure" "count" "param"
----
1: SetClosureCount "closure" "new_count"
2: OP
3: receive update
3: sending message for env copy
4: OP
----
1: SetClosureMissing "closure" "new_missing"
2: if resp goto then1( x = 1)
3: receive update
3: sending message for env copy
4: if resp goto then0( x = 1)
----
2: AssignV "var7" "closure"
4: AssignV "var4" "closure"
1: SetClosureParam "closure" "count" "param"
3: receive endCopy
----
1: OP
2: call
3: GetClosureParam "closure" 1 "x"
4: call
----
3: AssignV "var0" "x"
1: if resp goto then0( x = 1)
2: goto
4: goto
----
1: AssignV "var4" "closure"
3: AssignI "var1" 2
2: Wait
4: NewClosure "closure" 2
----
1: call
3: OP
4: SetClosureFn "closure" "_fn_0"
2: assignJob 
----
1: goto
1: receive ReqEnv
3: if resp goto then2( x = -1)
4: SetClosureMissingI "closure" 1
----
1: NewClosure "closure" 2
1: sending message for env copy
3: NewClosure "closure" 2
4: SetClosureCountI "closure" 1
----
1: SetClosureFn "closure" "_fn_0"
2: receive update
1: sending message for env copy
3: SetClosureFn "closure" "_fn_0"
4: SetClosureParamIL "closure" 0 "_fn_0"
----
4: AssignV "closure" "closure"
1: SetClosureMissingI "closure" 1
2: receive update
1: sending message for env copy
3: SetClosureMissingI "closure" 1
----
4: AssignV "var5" "x"
1: SetClosureCountI "closure" 1
2: receive endCopy
3: SetClosureCountI "closure" 1
----
4: AssignI "var6" 2
1: SetClosureParamIL "closure" 0 "_fn_0"
2: GetClosureParam "closure" 1 "x"
3: SetClosureParamIL "closure" 0 "_fn_0"
----
1: AssignV "closure" "closure"
2: AssignV "var0" "x"
3: AssignV "closure" "closure"
4: OP
----
1: AssignV "var5" "x"
2: AssignI "var1" 2
3: AssignV "var2" "x"
4: AssignV "param" "resp"
----
1: AssignI "var6" 2
3: AssignI "var3" 1
4: AssignI "one" 1
2: OP
----
1: OP
2: if resp goto then2( x = -1)
3: OP
4: GetClosureMissing "closure" "missing"
----
1: AssignV "param" "resp"
3: AssignV "param" "resp"
2: NewClosure "closure" 2
4: GetClosureCount "closure" "count"
----
1: AssignI "one" 1
3: AssignI "one" 1
2: SetClosureFn "closure" "_fn_0"
4: OP
----
4: AssignV "new_missing" "resp"
1: GetClosureMissing "closure" "missing"
2: SetClosureMissingI "closure" 1
3: GetClosureMissing "closure" "missing"
----
1: GetClosureCount "closure" "count"
2: SetClosureCountI "closure" 1
3: GetClosureCount "closure" "count"
4: OP
----
4: AssignV "new_count" "resp"
1: OP
2: SetClosureParamIL "closure" 0 "_fn_0"
3: OP
----
1: AssignV "new_missing" "resp"
2: AssignV "closure" "closure"
3: AssignV "new_missing" "resp"
4: SetClosureCount "closure" "new_count"
----
2: AssignV "var2" "x"
1: OP
3: OP
4: SetClosureMissing "closure" "new_missing"
----
1: AssignV "new_count" "resp"
2: AssignI "var3" 1
3: AssignV "new_count" "resp"
4: SetClosureParam "closure" "count" "param"
----
1: SetClosureCount "closure" "new_count"
2: OP
3: SetClosureCount "closure" "new_count"
4: OP
----
2: AssignV "param" "resp"
1: SetClosureMissing "closure" "new_missing"
3: SetClosureMissing "closure" "new_missing"
4: if resp goto then1( x = 1)
----
2: AssignI "one" 1
4: AssignV "var7" "closure"
1: SetClosureParam "closure" "count" "param"
3: SetClosureParam "closure" "count" "param"
----
1: OP
2: GetClosureMissing "closure" "missing"
3: OP
4: call
----
1: if resp goto then1( x = 1)
2: GetClosureCount "closure" "count"
3: if resp goto then0( x = 1)
4: goto
----
1: AssignV "var7" "closure"
3: AssignV "var4" "closure"
2: OP
4: Wait
----
2: AssignV "new_missing" "resp"
1: call
3: call
4: assignJob 
----
1: goto
2: OP
3: goto
3: receive ReqEnv
----
2: AssignV "new_count" "resp"
1: Wait
3: NewClosure "closure" 2
3: sending message for env copy
----
2: SetClosureCount "closure" "new_count"
3: SetClosureFn "closure" "_fn_0"
4: receive update
3: sending message for env copy
1: assignJob 
----
1: receive ReqEnv
2: SetClosureMissing "closure" "new_missing"
3: SetClosureMissingI "closure" 1
3: sending message for env copy
----
2: SetClosureParam "closure" "count" "param"
3: SetClosureCountI "closure" 1
4: receive update
4: receive endCopy
1: sending message for env copy
----
1: receive update
1: sending message for env copy
2: OP
3: SetClosureParamIL "closure" 0 "_fn_0"
4: GetClosureParam "closure" 1 "x"
----
3: AssignV "closure" "closure"
4: AssignV "var0" "x"
1: receive update
1: sending message for env copy
2: if resp goto then0( x = 1)
----
2: AssignV "var4" "closure"
3: AssignV "var5" "x"
4: AssignI "var1" 2
1: receive endCopy
----
3: AssignI "var6" 2
1: GetClosureParam "closure" 1 "x"
2: call
4: OP
----
1: AssignV "var0" "x"
2: goto
3: OP
4: if resp goto then2( x = 0)
----
1: AssignI "var1" 2
3: AssignV "param" "resp"
2: NewClosure "closure" 2
4: NewClosure "closure" 2
----
3: AssignI "one" 1
1: OP
2: SetClosureFn "closure" "_fn_0"
4: SetClosureFn "closure" "_fn_0"
----
1: if resp goto then2( x = 0)
2: SetClosureMissingI "closure" 1
3: GetClosureMissing "closure" "missing"
4: SetClosureMissingI "closure" 1
----
1: NewClosure "closure" 2
2: SetClosureCountI "closure" 1
3: GetClosureCount "closure" "count"
4: SetClosureCountI "closure" 1
----
1: SetClosureFn "closure" "_fn_0"
2: SetClosureParamIL "closure" 0 "_fn_0"
3: OP
4: SetClosureParamIL "closure" 0 "_fn_0"
----
2: AssignV "closure" "closure"
3: AssignV "new_missing" "resp"
4: AssignV "closure" "closure"
1: SetClosureMissingI "closure" 1
----
2: AssignV "var5" "x"
4: AssignV "var2" "x"
1: SetClosureCountI "closure" 1
3: OP
----
2: AssignI "var6" 2
3: AssignV "new_count" "resp"
4: AssignI "var3" 1
1: SetClosureParamIL "closure" 0 "_fn_0"
----
1: AssignV "closure" "closure"
2: OP
3: SetClosureCount "closure" "new_count"
4: OP
----
1: AssignV "var2" "x"
2: AssignV "param" "resp"
4: AssignV "param" "resp"
3: SetClosureMissing "closure" "new_missing"
----
1: AssignI "var3" 1
2: AssignI "one" 1
4: AssignI "one" 1
3: SetClosureParam "closure" "count" "param"
----
1: OP
2: GetClosureMissing "closure" "missing"
3: OP
4: GetClosureMissing "closure" "missing"
----
1: AssignV "param" "resp"
2: GetClosureCount "closure" "count"
3: if resp goto then1( x = 1)
4: GetClosureCount "closure" "count"
----
1: AssignI "one" 1
3: AssignV "var7" "closure"
2: OP
4: OP
----
2: AssignV "new_missing" "resp"
4: AssignV "new_missing" "resp"
1: GetClosureMissing "closure" "missing"
3: call
----
1: GetClosureCount "closure" "count"
2: OP
3: goto
4: OP
----
2: AssignV "new_count" "resp"
4: AssignV "new_count" "resp"
1: OP
3: Wait
----
1: AssignV "new_missing" "resp"
2: SetClosureCount "closure" "new_count"
4: SetClosureCount "closure" "new_count"
3: assignJob 
----
1: OP
2: SetClosureMissing "closure" "new_missing"
3: receive ReqEnv
4: SetClosureMissing "closure" "new_missing"
----
1: AssignV "new_count" "resp"
2: SetClosureParam "closure" "count" "param"
3: sending message for env copy
4: SetClosureParam "closure" "count" "param"
----
1: SetClosureCount "closure" "new_count"
2: OP
3: receive update
3: sending message for env copy
4: OP
----
1: SetClosureMissing "closure" "new_missing"
2: if resp goto then1( x = 1)
3: receive update
3: sending message for env copy
4: if resp goto then0( x = 1)
----
2: AssignV "var7" "closure"
4: AssignV "var4" "closure"
1: SetClosureParam "closure" "count" "param"
3: receive endCopy
----
1: OP
2: call
3: GetClosureParam "closure" 1 "x"
4: call
----
3: AssignV "var0" "x"
1: if resp goto then0( x = 1)
2: goto
4: goto
----
1: AssignV "var4" "closure"
3: AssignI "var1" 2
2: Wait
4: NewClosure "closure" 2
----
1: call
3: OP
4: SetClosureFn "closure" "_fn_0"
2: assignJob 
----
1: goto
1: receive ReqEnv
3: if resp goto then2( x = 1)
4: SetClosureMissingI "closure" 1
----
3: AssignI "resp" 1
1: NewClosure "closure" 2
1: sending message for env copy
4: SetClosureCountI "closure" 1
----
1: SetClosureFn "closure" "_fn_0"
2: receive update
1: sending message for env copy
3: goto
4: SetClosureParamIL "closure" 0 "_fn_0"
----
3: returning

4: AssignV "closure" "closure"
MsgResponse {puIdR = 3, environmentR = "env_7", variableR = "var9", valueR = BaseValV (NumberV 1)}
1: SetClosureMissingI "closure" 1
3: receive response
2: receive update
1: sending message for env copy
----
4: AssignV "var5" "x"
1: SetClosureCountI "closure" 1
2: receive endCopy
3: assignJob 
----
4: AssignI "var6" 2
1: SetClosureParamIL "closure" 0 "_fn_0"
2: GetClosureParam "closure" 1 "x"
4: receive ReqEnv
----
1: AssignV "closure" "closure"
2: AssignV "var0" "x"
4: OP
4: sending message for env copy
----
1: AssignV "var5" "x"
2: AssignI "var1" 2
4: AssignV "param" "resp"
3: receive update
4: sending message for env copy
----
1: AssignI "var6" 2
4: AssignI "one" 1
2: OP
3: receive update
4: sending message for env copy
----
1: OP
2: if resp goto then2( x = 1)
3: receive endCopy
4: GetClosureMissing "closure" "missing"
----
1: AssignV "param" "resp"
2: AssignI "resp" 1
3: GetClosureParam "closure" 1 "x"
4: GetClosureCount "closure" "count"
----
1: AssignI "one" 1
3: AssignV "var0" "x"
2: goto
4: OP
----
2: returning

3: AssignI "var1" 2
4: AssignV "new_missing" "resp"
MsgResponse {puIdR = 1, environmentR = "env_10", variableR = "var8", valueR = BaseValV (NumberV 1)}
1: GetClosureMissing "closure" "missing"
1: receive response
----
1: GetClosureCount "closure" "count"
3: OP
4: OP
2: assignJob 
----
4: AssignV "new_count" "resp"
1: OP
2: receive ReqEnv
3: if resp goto then2( x = 1)
----
1: AssignV "new_missing" "resp"
3: AssignI "resp" 1
2: sending message for env copy
4: SetClosureCount "closure" "new_count"
----
1: OP
2: receive update
2: sending message for env copy
3: goto
4: SetClosureMissing "closure" "new_missing"
----
1: AssignV "new_count" "resp"
3: returning

MsgResponse {puIdR = 4, environmentR = "env_9", variableR = "var8", valueR = BaseValV (NumberV 1)}
4: SetClosureParam "closure" "count" "param"
4: receive response
2: receive update
2: sending message for env copy
----
1: SetClosureCount "closure" "new_count"
2: receive endCopy
4: OP
3: assignJob 
----
1: SetClosureMissing "closure" "new_missing"
2: GetClosureParam "closure" 1 "x"
2: receive ReqEnv
4: if resp goto then1( x = 1)
----
2: AssignV "var0" "x"
4: AssignV "var7" "closure"
1: SetClosureParam "closure" "count" "param"
2: sending message for env copy
----
2: AssignI "var1" 2
1: OP
3: receive update
2: sending message for env copy
4: call
----
1: if resp goto then1( x = 1)
2: OP
3: receive update
2: sending message for env copy
4: goto
----
1: AssignV "var7" "closure"
2: if resp goto then2( x = 1)
3: receive endCopy
4: Wait
----
2: AssignI "resp" 1
1: call
3: GetClosureParam "closure" 1 "x"
4: assignJob 
----
3: AssignV "var0" "x"
1: goto
1: receive ReqEnv
2: goto
----
2: returning

3: AssignI "var1" 2
MsgResponse {puIdR = 2, environmentR = "env_8", variableR = "var9", valueR = BaseValV (NumberV 1)}
1: Wait
2: receive response
1: sending message for env copy
----
3: OP
4: receive update
1: sending message for env copy
1: assignJob 
----
1: sending message for env copy
3: if resp goto then2( x = 0)
4: receive ReqEnv
2: assignJob 
----
3: NewClosure "closure" 2
4: sending message for env copy
4: receive ReqEnv
----
3: SetClosureFn "closure" "_fn_0"
4: receive update
4: receive endCopy
4: sending message for env copy
----
1: receive update
3: SetClosureMissingI "closure" 1
4: GetClosureParam "closure" 1 "x"
4: sending message for env copy
----
4: AssignV "var0" "x"
1: receive update
1: receive endCopy
3: SetClosureCountI "closure" 1
4: sending message for env copy
----
4: AssignI "var1" 2
1: GetClosureParam "closure" 1 "x"
2: receive update
3: SetClosureParamIL "closure" 0 "_fn_0"
4: sending message for env copy
----
1: AssignV "var0" "x"
3: AssignV "closure" "closure"
2: receive update
4: OP
4: sending message for env copy
----
1: AssignI "var1" 2
3: AssignV "var2" "x"
2: receive endCopy
4: if resp goto then2( x = 2)
----
3: AssignI "var3" 1
4: AssignI "resp" 1
1: OP
2: GetClosureParam "closure" 1 "x"
----
2: AssignV "var0" "x"
1: if resp goto then2( x = 2)
3: OP
4: goto
----
1: AssignI "resp" 1
2: AssignI "var1" 2
3: AssignV "param" "resp"
4: returning

MsgResponse {puIdR = 1, environmentR = "env_10", variableR = "var9", valueR = BaseValV (NumberV 1)}
1: receive response
----
3: AssignI "one" 1
1: goto
2: OP
4: assignJob 
----
1: returning

MsgResponse {puIdR = 4, environmentR = "env_9", variableR = "var9", valueR = BaseValV (NumberV 1)}
2: if resp goto then2( x = 0)
3: GetClosureMissing "closure" "missing"
4: receive response
4: receive ReqEnv
----
1: resuming
2: NewClosure "closure" 2
3: GetClosureCount "closure" "count"
4: sending message for env copy
----
1: OP
2: SetClosureFn "closure" "_fn_0"
3: OP
4: receive update
4: sending message for env copy
----
3: AssignV "new_missing" "resp"
1: goto
2: SetClosureMissingI "closure" 1
4: receive update
4: sending message for env copy
----
1: returning

MsgResponse {puIdR = 1, environmentR = "env_6", variableR = "var9", valueR = BaseValV (NumberV 2)}
1: receive response
2: SetClosureCountI "closure" 1
3: OP
4: receive endCopy
----
3: AssignV "new_count" "resp"
2: SetClosureParamIL "closure" 0 "_fn_0"
4: GetClosureParam "closure" 1 "x"
1: assignJob 
----
2: AssignV "closure" "closure"
4: AssignV "var0" "x"
2: receive ReqEnv
3: SetClosureCount "closure" "new_count"
----
2: AssignV "var2" "x"
4: AssignI "var1" 2
2: sending message for env copy
3: SetClosureMissing "closure" "new_missing"
----
2: AssignI "var3" 1
1: receive update
2: sending message for env copy
3: SetClosureParam "closure" "count" "param"
4: OP
----
1: receive update
2: OP
2: sending message for env copy
3: OP
4: if resp goto then2( x = -1)
----
2: AssignV "param" "resp"
1: receive endCopy
3: if resp goto then0( x = 1)
4: NewClosure "closure" 2
----
2: AssignI "one" 1
3: AssignV "var4" "closure"
1: GetClosureParam "closure" 1 "x"
4: SetClosureFn "closure" "_fn_0"
----
1: AssignV "var0" "x"
2: GetClosureMissing "closure" "missing"
3: call
4: SetClosureMissingI "closure" 1
----
1: AssignI "var1" 2
2: GetClosureCount "closure" "count"
3: goto
4: SetClosureCountI "closure" 1
----
1: OP
2: OP
3: NewClosure "closure" 2
4: SetClosureParamIL "closure" 0 "_fn_0"
----
2: AssignV "new_missing" "resp"
4: AssignV "closure" "closure"
1: if resp goto then2( x = -1)
3: SetClosureFn "closure" "_fn_0"
----
4: AssignV "var2" "x"
1: NewClosure "closure" 2
2: OP
3: SetClosureMissingI "closure" 1
----
2: AssignV "new_count" "resp"
4: AssignI "var3" 1
1: SetClosureFn "closure" "_fn_0"
3: SetClosureCountI "closure" 1
----
1: SetClosureMissingI "closure" 1
2: SetClosureCount "closure" "new_count"
3: SetClosureParamIL "closure" 0 "_fn_0"
4: OP
----
3: AssignV "closure" "closure"
4: AssignV "param" "resp"
1: SetClosureCountI "closure" 1
2: SetClosureMissing "closure" "new_missing"
----
3: AssignV "var5" "x"
4: AssignI "one" 1
1: SetClosureParamIL "closure" 0 "_fn_0"
2: SetClosureParam "closure" "count" "param"
----
1: AssignV "closure" "closure"
3: AssignI "var6" 2
2: OP
4: GetClosureMissing "closure" "missing"
----
1: AssignV "var2" "x"
2: if resp goto then0( x = 1)
3: OP
4: GetClosureCount "closure" "count"
----
1: AssignI "var3" 1
2: AssignV "var4" "closure"
3: AssignV "param" "resp"
4: OP
----
3: AssignI "one" 1
4: AssignV "new_missing" "resp"
1: OP
2: call
----
1: AssignV "param" "resp"
2: goto
3: GetClosureMissing "closure" "missing"
4: OP
----
1: AssignI "one" 1
4: AssignV "new_count" "resp"
2: NewClosure "closure" 2
3: GetClosureCount "closure" "count"
----
1: GetClosureMissing "closure" "missing"
2: SetClosureFn "closure" "_fn_0"
3: OP
4: SetClosureCount "closure" "new_count"
----
3: AssignV "new_missing" "resp"
1: GetClosureCount "closure" "count"
2: SetClosureMissingI "closure" 1
4: SetClosureMissing "closure" "new_missing"
----
1: OP
2: SetClosureCountI "closure" 1
3: OP
4: SetClosureParam "closure" "count" "param"
----
1: AssignV "new_missing" "resp"
3: AssignV "new_count" "resp"
2: SetClosureParamIL "closure" 0 "_fn_0"
4: OP
----
2: AssignV "closure" "closure"
1: OP
3: SetClosureCount "closure" "new_count"
4: if resp goto then0( x = 1)
----
1: AssignV "new_count" "resp"
2: AssignV "var5" "x"
4: AssignV "var4" "closure"
3: SetClosureMissing "closure" "new_missing"
----
2: AssignI "var6" 2
1: SetClosureCount "closure" "new_count"
3: SetClosureParam "closure" "count" "param"
4: call
----
1: SetClosureMissing "closure" "new_missing"
2: OP
3: OP
4: goto
----
2: AssignV "param" "resp"
1: SetClosureParam "closure" "count" "param"
3: if resp goto then1( x = 1)
4: NewClosure "closure" 2
----
2: AssignI "one" 1
3: AssignV "var7" "closure"
1: OP
4: SetClosureFn "closure" "_fn_0"
----
1: if resp goto then0( x = 1)
2: GetClosureMissing "closure" "missing"
3: call
4: SetClosureMissingI "closure" 1
----
1: AssignV "var4" "closure"
2: GetClosureCount "closure" "count"
3: goto
4: SetClosureCountI "closure" 1
----
1: call
2: OP
3: Wait
4: SetClosureParamIL "closure" 0 "_fn_0"
----
2: AssignV "new_missing" "resp"
4: AssignV "closure" "closure"
1: goto
3: assignJob 
----
4: AssignV "var5" "x"
1: NewClosure "closure" 2
1: receive ReqEnv
2: OP
----
2: AssignV "new_count" "resp"
4: AssignI "var6" 2
1: SetClosureFn "closure" "_fn_0"
1: sending message for env copy
----
1: SetClosureMissingI "closure" 1
2: SetClosureCount "closure" "new_count"
3: receive update
1: sending message for env copy
4: OP
----
4: AssignV "param" "resp"
1: SetClosureCountI "closure" 1
2: SetClosureMissing "closure" "new_missing"
3: receive update
1: sending message for env copy
----
4: AssignI "one" 1
1: SetClosureParamIL "closure" 0 "_fn_0"
2: SetClosureParam "closure" "count" "param"
3: receive endCopy
----
1: AssignV "closure" "closure"
2: OP
3: GetClosureParam "closure" 1 "x"
4: GetClosureMissing "closure" "missing"
----
1: AssignV "var5" "x"
3: AssignV "var0" "x"
2: if resp goto then1( x = 1)
4: GetClosureCount "closure" "count"
----
1: AssignI "var6" 2
2: AssignV "var7" "closure"
3: AssignI "var1" 2
4: OP
----
4: AssignV "new_missing" "resp"
1: OP
2: call
3: OP
----
1: AssignV "param" "resp"
2: goto
3: if resp goto then2( x = 0)
4: OP
----
1: AssignI "one" 1
4: AssignV "new_count" "resp"
2: Wait
3: NewClosure "closure" 2
----
1: GetClosureMissing "closure" "missing"
3: SetClosureFn "closure" "_fn_0"
4: SetClosureCount "closure" "new_count"
2: assignJob 
----
1: GetClosureCount "closure" "count"
2: receive ReqEnv
3: SetClosureMissingI "closure" 1
4: SetClosureMissing "closure" "new_missing"
----
1: OP
2: sending message for env copy
3: SetClosureCountI "closure" 1
4: SetClosureParam "closure" "count" "param"
----
1: AssignV "new_missing" "resp"
2: receive update
2: sending message for env copy
3: SetClosureParamIL "closure" 0 "_fn_0"
4: OP
----
3: AssignV "closure" "closure"
1: OP
2: receive update
2: sending message for env copy
4: if resp goto then1( x = 1)
----
1: AssignV "new_count" "resp"
3: AssignV "var2" "x"
4: AssignV "var7" "closure"
2: receive endCopy
----
3: AssignI "var3" 1
1: SetClosureCount "closure" "new_count"
2: GetClosureParam "closure" 1 "x"
4: call
----
2: AssignV "var0" "x"
1: SetClosureMissing "closure" "new_missing"
3: OP
4: goto
----
2: AssignI "var1" 2
3: AssignV "param" "resp"
1: SetClosureParam "closure" "count" "param"
4: Wait
----
3: AssignI "one" 1
1: OP
2: OP
4: resuming
----
1: if resp goto then1( x = 1)
2: if resp goto then2( x = 2)
3: GetClosureMissing "closure" "missing"
4: OP
----
1: AssignV "var7" "closure"
2: AssignI "resp" 1
3: GetClosureCount "closure" "count"
4: goto
----
4: returning

MsgResponse {puIdR = 3, environmentR = "env_7", variableR = "var8", valueR = BaseValV (NumberV 2)}
2: goto
3: OP
3: receive response
1: call
----
2: returning

3: AssignV "new_missing" "resp"
MsgResponse {puIdR = 2, environmentR = "env_18", variableR = "var9", valueR = BaseValV (NumberV 1)}
1: goto
2: receive response
4: assignJob 
----
1: Wait
1: receive ReqEnv
3: OP
2: assignJob 
----
3: AssignV "new_count" "resp"
1: sending message for env copy
4: receive ReqEnv
1: assignJob 
----
1: sending message for env copy
3: SetClosureCount "closure" "new_count"
3: receive ReqEnv
4: sending message for env copy
----
3: SetClosureMissing "closure" "new_missing"
4: receive update
1: sending message for env copy
3: sending message for env copy
4: sending message for env copy
----
3: SetClosureParam "closure" "count" "param"
4: receive update
3: sending message for env copy
4: sending message for env copy
----
2: receive update
3: OP
4: receive endCopy
3: sending message for env copy
----
1: receive update
3: if resp goto then0( x = 1)
4: GetClosureParam "closure" 1 "x"
----
3: AssignV "var4" "closure"
4: AssignV "var0" "x"
2: receive update
----
4: AssignI "var1" 2
1: receive update
2: receive endCopy
3: call
----
1: receive endCopy
2: GetClosureParam "closure" 1 "x"
3: goto
4: OP
----
2: AssignV "var0" "x"
1: GetClosureParam "closure" 1 "x"
3: NewClosure "closure" 2
4: if resp goto then2( x = 1)
----
1: AssignV "var0" "x"
2: AssignI "var1" 2
4: AssignI "resp" 1
3: SetClosureFn "closure" "_fn_0"
----
1: AssignI "var1" 2
2: OP
3: SetClosureMissingI "closure" 1
4: goto
----
4: returning

MsgResponse {puIdR = 1, environmentR = "env_20", variableR = "var9", valueR = BaseValV (NumberV 1)}
1: OP
1: receive response
2: if resp goto then2( x = 1)
3: SetClosureCountI "closure" 1
----
2: AssignI "resp" 1
1: if resp goto then2( x = 2)
3: SetClosureParamIL "closure" 0 "_fn_0"
4: assignJob 
----
1: AssignI "resp" 1
3: AssignV "closure" "closure"
2: goto
3: receive ReqEnv
----
2: returning

3: AssignV "var5" "x"
MsgResponse {puIdR = 4, environmentR = "env_19", variableR = "var9", valueR = BaseValV (NumberV 1)}
1: goto
4: receive response
3: sending message for env copy
----
1: returning

3: AssignI "var6" 2
MsgResponse {puIdR = 3, environmentR = "env_15", variableR = "var9", valueR = BaseValV (NumberV 1)}
3: receive response
4: receive update
3: sending message for env copy
2: assignJob 
----
3: OP
3: sending message for env copy
4: receive ReqEnv
1: assignJob 
----
3: AssignV "param" "resp"
2: receive ReqEnv
4: sending message for env copy
----
3: AssignI "one" 1
4: receive update
4: receive endCopy
2: sending message for env copy
4: sending message for env copy
----
2: receive update
2: sending message for env copy
3: GetClosureMissing "closure" "missing"
4: GetClosureParam "closure" 1 "x"
4: sending message for env copy
----
4: AssignV "var0" "x"
1: receive update
2: sending message for env copy
3: GetClosureCount "closure" "count"
----
4: AssignI "var1" 2
2: receive update
3: OP
----
3: AssignV "new_missing" "resp"
1: receive update
2: receive endCopy
4: OP
----
1: receive endCopy
2: GetClosureParam "closure" 1 "x"
3: OP
4: if resp goto then2( x = 1)
----
2: AssignV "var0" "x"
3: AssignV "new_count" "resp"
4: AssignI "resp" 1
1: GetClosureParam "closure" 1 "x"
----
1: AssignV "var0" "x"
2: AssignI "var1" 2
3: SetClosureCount "closure" "new_count"
4: goto
----
1: AssignI "var1" 2
4: returning

MsgResponse {puIdR = 3, environmentR = "env_21", variableR = "var8", valueR = BaseValV (NumberV 1)}
2: OP
3: SetClosureMissing "closure" "new_missing"
3: receive response
----
1: OP
2: if resp goto then2( x = 0)
3: SetClosureParam "closure" "count" "param"
4: assignJob 
----
1: if resp goto then2( x = 1)
2: NewClosure "closure" 2
3: OP
3: receive ReqEnv
----
1: AssignI "resp" 1
2: SetClosureFn "closure" "_fn_0"
3: if resp goto then1( x = 1)
3: sending message for env copy
----
3: AssignV "var7" "closure"
1: goto
2: SetClosureMissingI "closure" 1
4: receive update
3: sending message for env copy
----
1: returning

MsgResponse {puIdR = 2, environmentR = "env_18", variableR = "var8", valueR = BaseValV (NumberV 1)}
2: SetClosureCountI "closure" 1
2: receive response
4: receive update
3: call
3: sending message for env copy
----
2: SetClosureParamIL "closure" 0 "_fn_0"
3: goto
4: receive endCopy
1: assignJob 
----
2: AssignV "closure" "closure"
3: Wait
3: receive ReqEnv
4: GetClosureParam "closure" 1 "x"
----
2: AssignV "var2" "x"
4: AssignV "var0" "x"
3: resuming
3: sending message for env copy
----
2: AssignI "var3" 1
4: AssignI "var1" 2
1: receive update
3: OP
3: sending message for env copy
----
1: receive update
2: OP
3: goto
3: sending message for env copy
4: OP
----
2: AssignV "param" "resp"
3: returning

MsgResponse {puIdR = 3, environmentR = "env_3", variableR = "var9", valueR = BaseValV (NumberV 3)}
3: receive response
1: receive endCopy
4: if resp goto then2( x = 1)
----
2: AssignI "one" 1
4: AssignI "resp" 1
1: GetClosureParam "closure" 1 "x"
3: assignJob 
----
1: AssignV "var0" "x"
2: GetClosureMissing "closure" "missing"
2: receive ReqEnv
4: goto
----
1: AssignI "var1" 2
4: returning

MsgResponse {puIdR = 3, environmentR = "env_15", variableR = "var8", valueR = BaseValV (NumberV 1)}
2: GetClosureCount "closure" "count"
3: receive response
2: sending message for env copy
----
1: OP
2: OP
3: receive update
2: sending message for env copy
----
2: AssignV "new_missing" "resp"
1: if resp goto then2( x = 2)
3: receive update
2: sending message for env copy
----
1: AssignI "resp" 1
2: OP
3: receive endCopy
----
2: AssignV "new_count" "resp"
1: goto
3: GetClosureParam "closure" 1 "x"
----
1: returning

3: AssignV "var0" "x"
MsgResponse {puIdR = 3, environmentR = "env_21", variableR = "var9", valueR = BaseValV (NumberV 1)}
2: SetClosureCount "closure" "new_count"
3: receive response
----
3: AssignI "var1" 2
2: SetClosureMissing "closure" "new_missing"
----
2: SetClosureParam "closure" "count" "param"
3: OP
----
2: OP
3: if resp goto then2( x = -2)
----
2: if resp goto then0( x = 1)
3: NewClosure "closure" 2
----
2: AssignV "var4" "closure"
3: SetClosureFn "closure" "_fn_0"
----
2: call
3: SetClosureMissingI "closure" 1
1: assignJob 
----
2: goto
2: receive ReqEnv
3: SetClosureCountI "closure" 1
----
2: NewClosure "closure" 2
2: sending message for env copy
3: SetClosureParamIL "closure" 0 "_fn_0"
----
3: AssignV "closure" "closure"
1: receive update
2: SetClosureFn "closure" "_fn_0"
2: sending message for env copy
----
3: AssignV "var2" "x"
1: receive update
2: SetClosureMissingI "closure" 1
2: sending message for env copy
----
3: AssignI "var3" 1
1: receive endCopy
2: SetClosureCountI "closure" 1
----
1: GetClosureParam "closure" 1 "x"
2: SetClosureParamIL "closure" 0 "_fn_0"
3: OP
----
1: AssignV "var0" "x"
2: AssignV "closure" "closure"
3: AssignV "param" "resp"
----
1: AssignI "var1" 2
2: AssignV "var5" "x"
3: AssignI "one" 1
----
2: AssignI "var6" 2
1: OP
3: GetClosureMissing "closure" "missing"
----
1: if resp goto then2( x = 1)
2: OP
3: GetClosureCount "closure" "count"
----
1: AssignI "resp" 1
2: AssignV "param" "resp"
3: OP
----
2: AssignI "one" 1
3: AssignV "new_missing" "resp"
1: goto
----
1: returning

MsgResponse {puIdR = 2, environmentR = "env_27", variableR = "var8", valueR = BaseValV (NumberV 1)}
2: GetClosureMissing "closure" "missing"
2: receive response
3: OP
----
3: AssignV "new_count" "resp"
2: GetClosureCount "closure" "count"
----
2: OP
3: SetClosureCount "closure" "new_count"
----
2: AssignV "new_missing" "resp"
3: SetClosureMissing "closure" "new_missing"
----
2: OP
3: SetClosureParam "closure" "count" "param"
----
2: AssignV "new_count" "resp"
3: OP
----
2: SetClosureCount "closure" "new_count"
3: if resp goto then0( x = 1)
----
3: AssignV "var4" "closure"
2: SetClosureMissing "closure" "new_missing"
----
2: SetClosureParam "closure" "count" "param"
3: call
1: assignJob 
----
2: OP
3: goto
3: receive ReqEnv
----
2: if resp goto then1( x = 1)
3: NewClosure "closure" 2
3: sending message for env copy
----
2: AssignV "var7" "closure"
1: receive update
3: SetClosureFn "closure" "_fn_0"
3: sending message for env copy
----
1: receive update
2: call
3: SetClosureMissingI "closure" 1
3: sending message for env copy
4: assignJob 
----
2: goto
2: receive ReqEnv
3: SetClosureCountI "closure" 1
----
1: receive endCopy
2: Wait
2: sending message for env copy
3: SetClosureParamIL "closure" 0 "_fn_0"
----
3: AssignV "closure" "closure"
1: GetClosureParam "closure" 1 "x"
2: resuming
4: receive update
2: sending message for env copy
----
1: AssignV "var0" "x"
3: AssignV "var5" "x"
2: OP
4: receive update
2: sending message for env copy
----
1: AssignI "var1" 2
3: AssignI "var6" 2
2: goto
4: receive endCopy
----
2: returning

MsgResponse {puIdR = 4, environmentR = "env_5", variableR = "var9", valueR = BaseValV (NumberV 2)}
1: OP
3: OP
4: GetClosureParam "closure" 1 "x"
4: receive response
----
3: AssignV "param" "resp"
4: AssignV "var0" "x"
1: if resp goto then2( x = -1)
----
3: AssignI "one" 1
4: AssignI "var1" 2
1: NewClosure "closure" 2
----
1: SetClosureFn "closure" "_fn_0"
3: GetClosureMissing "closure" "missing"
4: OP
----
1: SetClosureMissingI "closure" 1
3: GetClosureCount "closure" "count"
4: if resp goto then2( x = 2)
----
4: AssignI "resp" 1
1: SetClosureCountI "closure" 1
3: OP
----
3: AssignV "new_missing" "resp"
1: SetClosureParamIL "closure" 0 "_fn_0"
4: goto
----
1: AssignV "closure" "closure"
4: returning

MsgResponse {puIdR = 2, environmentR = "env_27", variableR = "var9", valueR = BaseValV (NumberV 1)}
2: receive response
3: OP
----
1: AssignV "var2" "x"
3: AssignV "new_count" "resp"
2: resuming
----
1: AssignI "var3" 1
2: OP
3: SetClosureCount "closure" "new_count"
----
1: OP
2: goto
3: SetClosureMissing "closure" "new_missing"
----
1: AssignV "param" "resp"
2: returning

MsgResponse {puIdR = 4, environmentR = "env_19", variableR = "var8", valueR = BaseValV (NumberV 2)}
3: SetClosureParam "closure" "count" "param"
4: receive response
----
1: AssignI "one" 1
3: OP
4: resuming
----
1: GetClosureMissing "closure" "missing"
3: if resp goto then1( x = 1)
4: OP
----
3: AssignV "var7" "closure"
1: GetClosureCount "closure" "count"
4: goto
----
4: returning

MsgResponse {puIdR = 4, environmentR = "env_5", variableR = "var8", valueR = BaseValV (NumberV 3)}
1: OP
4: receive response
3: call
2: assignJob 
----
1: AssignV "new_missing" "resp"
3: goto
3: receive ReqEnv
4: resuming
----
1: OP
3: Wait
3: sending message for env copy
4: OP
----
1: AssignV "new_count" "resp"
2: receive update
3: resuming
3: sending message for env copy
4: goto
----
4: returning

MsgResponse {puIdR = 3, environmentR = "env_3", variableR = "var8", valueR = BaseValV (NumberV 5)}
1: SetClosureCount "closure" "new_count"
3: OP
3: receive response
2: receive update
3: sending message for env copy
----
1: SetClosureMissing "closure" "new_missing"
2: receive endCopy
3: goto
----
3: returning

MsgResponse {puIdR = 2, environmentR = "env_8", variableR = "var8", valueR = BaseValV (NumberV 2)}
1: SetClosureParam "closure" "count" "param"
2: GetClosureParam "closure" 1 "x"
2: receive response
----
2: AssignV "var0" "x"
1: OP
3: resuming
----
2: AssignI "var1" 2
1: if resp goto then0( x = 1)
3: OP
----
1: AssignV "var4" "closure"
2: OP
3: goto
----
3: returning

MsgResponse {puIdR = 1, environmentR = "env_20", variableR = "var8", valueR = BaseValV (NumberV 2)}
1: receive response
2: if resp goto then2( x = 0)
----
1: call
2: NewClosure "closure" 2
3: resuming
4: assignJob 
----
1: goto
1: receive ReqEnv
2: SetClosureFn "closure" "_fn_0"
3: OP
----
1: NewClosure "closure" 2
1: sending message for env copy
2: SetClosureMissingI "closure" 1
3: goto
----
3: returning

MsgResponse {puIdR = 2, environmentR = "env_1", variableR = "var9", valueR = BaseValV (NumberV 8)}
1: SetClosureFn "closure" "_fn_0"
2: SetClosureCountI "closure" 1
2: receive response
4: receive update
1: sending message for env copy
----
1: SetClosureMissingI "closure" 1
2: SetClosureParamIL "closure" 0 "_fn_0"
4: receive update
1: sending message for env copy
----
2: AssignV "closure" "closure"
1: SetClosureCountI "closure" 1
4: receive endCopy
----
2: AssignV "var2" "x"
1: SetClosureParamIL "closure" 0 "_fn_0"
4: GetClosureParam "closure" 1 "x"
----
1: AssignV "closure" "closure"
2: AssignI "var3" 1
4: AssignV "var0" "x"
----
1: AssignV "var5" "x"
4: AssignI "var1" 2
2: OP
----
1: AssignI "var6" 2
2: AssignV "param" "resp"
4: OP
----
2: AssignI "one" 1
1: OP
4: if resp goto then2( x = 0)
----
1: AssignV "param" "resp"
2: GetClosureMissing "closure" "missing"
4: NewClosure "closure" 2
----
1: AssignI "one" 1
2: GetClosureCount "closure" "count"
4: SetClosureFn "closure" "_fn_0"
----
1: GetClosureMissing "closure" "missing"
2: OP
4: SetClosureMissingI "closure" 1
----
2: AssignV "new_missing" "resp"
1: GetClosureCount "closure" "count"
4: SetClosureCountI "closure" 1
----
1: OP
2: OP
4: SetClosureParamIL "closure" 0 "_fn_0"
----
1: AssignV "new_missing" "resp"
2: AssignV "new_count" "resp"
4: AssignV "closure" "closure"
----
4: AssignV "var2" "x"
1: OP
2: SetClosureCount "closure" "new_count"
----
1: AssignV "new_count" "resp"
4: AssignI "var3" 1
2: SetClosureMissing "closure" "new_missing"
----
1: SetClosureCount "closure" "new_count"
2: SetClosureParam "closure" "count" "param"
4: OP
----
4: AssignV "param" "resp"
1: SetClosureMissing "closure" "new_missing"
2: OP
----
4: AssignI "one" 1
1: SetClosureParam "closure" "count" "param"
2: if resp goto then0( x = 1)
----
2: AssignV "var4" "closure"
1: OP
4: GetClosureMissing "closure" "missing"
----
1: if resp goto then1( x = 1)
2: call
4: GetClosureCount "closure" "count"
3: assignJob 
----
1: AssignV "var7" "closure"
2: goto
2: receive ReqEnv
4: OP
----
4: AssignV "new_missing" "resp"
1: call
2: NewClosure "closure" 2
2: sending message for env copy
----
1: goto
2: SetClosureFn "closure" "_fn_0"
3: receive update
2: sending message for env copy
4: OP
----
4: AssignV "new_count" "resp"
1: Wait
2: SetClosureMissingI "closure" 1
3: receive update
2: sending message for env copy
----
1: resuming
2: SetClosureCountI "closure" 1
3: receive endCopy
4: SetClosureCount "closure" "new_count"
----
1: OP
2: SetClosureParamIL "closure" 0 "_fn_0"
3: GetClosureParam "closure" 1 "x"
4: SetClosureMissing "closure" "new_missing"
----
2: AssignV "closure" "closure"
3: AssignV "var0" "x"
1: goto
4: SetClosureParam "closure" "count" "param"
----
1: returning

2: AssignV "var5" "x"
3: AssignI "var1" 2
MsgResponse {puIdR = 2, environmentR = "env_4", variableR = "var9", valueR = BaseValV (NumberV 3)}
2: receive response
4: OP
----
2: AssignI "var6" 2
3: OP
4: if resp goto then0( x = 1)
1: assignJob 
----
4: AssignV "var4" "closure"
1: receive ReqEnv
2: OP
3: if resp goto then2( x = 1)
----
2: AssignV "param" "resp"
3: AssignI "resp" 1
1: sending message for env copy
4: call
----
2: AssignI "one" 1
1: receive update
1: sending message for env copy
3: goto
4: goto
----
3: returning

MsgResponse {puIdR = 2, environmentR = "env_35", variableR = "var8", valueR = BaseValV (NumberV 1)}
2: GetClosureMissing "closure" "missing"
2: receive response
1: receive update
1: sending message for env copy
4: NewClosure "closure" 2
----
1: receive endCopy
2: GetClosureCount "closure" "count"
4: SetClosureFn "closure" "_fn_0"
3: assignJob 
----
1: GetClosureParam "closure" 1 "x"
2: OP
4: SetClosureMissingI "closure" 1
4: receive ReqEnv
----
1: AssignV "var0" "x"
2: AssignV "new_missing" "resp"
4: SetClosureCountI "closure" 1
4: sending message for env copy
----
1: AssignI "var1" 2
2: OP
3: receive update
4: SetClosureParamIL "closure" 0 "_fn_0"
4: sending message for env copy
----
2: AssignV "new_count" "resp"
4: AssignV "closure" "closure"
1: OP
3: receive update
4: sending message for env copy
----
4: AssignV "var5" "x"
1: if resp goto then2( x = 1)
2: SetClosureCount "closure" "new_count"
3: receive endCopy
----
1: AssignI "resp" 1
4: AssignI "var6" 2
2: SetClosureMissing "closure" "new_missing"
3: GetClosureParam "closure" 1 "x"
----
3: AssignV "var0" "x"
1: goto
2: SetClosureParam "closure" "count" "param"
4: OP
----
1: returning

3: AssignI "var1" 2
4: AssignV "param" "resp"
MsgResponse {puIdR = 1, environmentR = "env_33", variableR = "var9", valueR = BaseValV (NumberV 1)}
1: receive response
2: OP
----
4: AssignI "one" 1
2: if resp goto then1( x = 1)
3: OP
----
2: AssignV "var7" "closure"
3: if resp goto then2( x = 1)
4: GetClosureMissing "closure" "missing"
----
3: AssignI "resp" 1
2: call
4: GetClosureCount "closure" "count"
1: assignJob 
----
2: goto
2: receive ReqEnv
3: goto
4: OP
----
3: returning

4: AssignV "new_missing" "resp"
MsgResponse {puIdR = 4, environmentR = "env_36", variableR = "var8", valueR = BaseValV (NumberV 1)}
2: Wait
4: receive response
2: sending message for env copy
----
1: receive update
2: resuming
2: sending message for env copy
4: OP
----
4: AssignV "new_count" "resp"
1: receive update
2: OP
2: sending message for env copy
----
1: receive endCopy
2: goto
4: SetClosureCount "closure" "new_count"
----
2: returning

MsgResponse {puIdR = 1, environmentR = "env_6", variableR = "var8", valueR = BaseValV (NumberV 3)}
1: GetClosureParam "closure" 1 "x"
1: receive response
4: SetClosureMissing "closure" "new_missing"
----
1: AssignV "var0" "x"
4: SetClosureParam "closure" "count" "param"
----
1: AssignI "var1" 2
4: OP
----
1: OP
4: if resp goto then1( x = 1)
----
4: AssignV "var7" "closure"
1: if resp goto then2( x = 2)
----
1: AssignI "resp" 1
4: call
2: assignJob 
----
1: goto
4: goto
4: receive ReqEnv
----
1: returning

MsgResponse {puIdR = 2, environmentR = "env_35", variableR = "var9", valueR = BaseValV (NumberV 1)}
2: receive response
4: Wait
4: sending message for env copy
----
1: resuming
2: receive update
4: sending message for env copy
----
1: OP
2: receive update
4: sending message for env copy
----
1: goto
2: receive endCopy
----
1: returning

MsgResponse {puIdR = 1, environmentR = "env_2", variableR = "var9", valueR = BaseValV (NumberV 5)}
1: receive response
2: GetClosureParam "closure" 1 "x"
----
2: AssignV "var0" "x"
----
2: AssignI "var1" 2
----
2: OP
----
2: if resp goto then2( x = 2)
----
2: AssignI "resp" 1
----
2: goto
----
2: returning

MsgResponse {puIdR = 4, environmentR = "env_36", variableR = "var9", valueR = BaseValV (NumberV 1)}
4: receive response
----
2: resuming
4: resuming
----
2: OP
4: OP
----
2: goto
4: goto
----
2: returning

4: returning

MsgResponse {puIdR = 1, environmentR = "env_33", variableR = "var8", valueR = BaseValV (NumberV 2)}
1: receive response
----
MsgResponse {puIdR = 3, environmentR = "env_31", variableR = "var9", valueR = BaseValV (NumberV 2)}
1: resuming
3: receive response
----
1: OP
----
1: goto
----
1: returning

MsgResponse {puIdR = 3, environmentR = "env_31", variableR = "var8", valueR = BaseValV (NumberV 3)}
3: receive response
----
3: resuming
----
3: OP
----
3: goto
----
3: returning

MsgResponse {puIdR = 2, environmentR = "env_4", variableR = "var8", valueR = BaseValV (NumberV 5)}
2: receive response
----
2: resuming
----
2: OP
----
2: goto
----
2: returning

MsgResponse {puIdR = 1, environmentR = "env_2", variableR = "var8", valueR = BaseValV (NumberV 8)}
1: receive response
----
1: resuming
----
1: OP
----
1: goto
----
1: returning

MsgResponse {puIdR = 2, environmentR = "env_1", variableR = "var8", valueR = BaseValV (NumberV 13)}
2: receive response
----
2: resuming
----
2: OP
----
2: goto
----
2: returning

MsgResponse {puIdR = 1, environmentR = "env_0", variableR = "resp", valueR = BaseValV (NumberV 21)}
1: receive response
----
1: resuming
----
1: returning

MsgResponse {puIdR = 0, environmentR = "0", variableR = "result", valueR = BaseValV (NumberV 21)}
0: receive response
Finished!
response: BaseValV (NumberV 21)
