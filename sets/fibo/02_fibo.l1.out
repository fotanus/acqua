1: assignJob 
"Adicionando then1 e dummy1"
"Adicionando back1"
"Adicionando back1"
----
0: receive ReqEnv
----
0: sending message for env copy
----
1: receive endCopy
----
1: NewClosure "closure" 2
----
1: SetClosureFn "closure" "_fn_0"
----
1: SetClosureMissingI "closure" 1
----
1: SetClosureCountI "closure" 1
----
1: SetClosureParamIL "closure" 0 "_fn_0"
----
1: AssignV "closure" "closure"
----
1: AssignI "param" 2
----
1: AssignI "one" 1
----
1: GetClosureMissing "closure" "missing"
----
1: GetClosureCount "closure" "count"
----
1: OP
----
1: AssignV "new_missing" "resp"
----
1: OP
----
1: AssignV "new_count" "resp"
----
1: SetClosureCount "closure" "new_count"
----
1: SetClosureMissing "closure" "new_missing"
----
1: SetClosureParam "closure" "count" "param"
----
1: OP
----
1: if resp goto then3( x = 1)
----
1: AssignV "var10" "closure"
----
1: call
2: assignJob 
----
1: goto
1: receive ReqEnv
----
1: Wait
1: sending message for env copy
----
2: receive update
1: sending message for env copy
----
2: receive update
1: sending message for env copy
----
2: receive endCopy
----
2: GetClosureParam "closure" 1 "x"
----
2: AssignV "var0" "x"
----
2: AssignI "var1" 2
----
2: OP
----
2: if resp goto then2( x = 0)
----
2: NewClosure "closure" 2
----
2: SetClosureFn "closure" "_fn_0"
----
2: SetClosureMissingI "closure" 1
----
2: SetClosureCountI "closure" 1
----
2: SetClosureParamIL "closure" 0 "_fn_0"
----
2: AssignV "closure" "closure"
----
2: AssignV "var2" "x"
----
2: AssignI "var3" 1
----
2: OP
----
2: AssignV "param" "resp"
----
2: AssignI "one" 1
----
2: GetClosureMissing "closure" "missing"
----
2: GetClosureCount "closure" "count"
----
2: OP
----
2: AssignV "new_missing" "resp"
----
2: OP
----
2: AssignV "new_count" "resp"
----
2: SetClosureCount "closure" "new_count"
----
2: SetClosureMissing "closure" "new_missing"
----
2: SetClosureParam "closure" "count" "param"
----
2: OP
----
2: if resp goto then0( x = 1)
----
2: AssignV "var4" "closure"
----
2: call
1: assignJob 
----
2: goto
2: receive ReqEnv
----
2: NewClosure "closure" 2
2: sending message for env copy
----
1: receive update
2: SetClosureFn "closure" "_fn_0"
2: sending message for env copy
----
1: receive update
2: SetClosureMissingI "closure" 1
2: sending message for env copy
----
1: receive endCopy
2: SetClosureCountI "closure" 1
----
1: GetClosureParam "closure" 1 "x"
2: SetClosureParamIL "closure" 0 "_fn_0"
----
1: AssignV "var0" "x"
2: AssignV "closure" "closure"
----
1: AssignI "var1" 2
2: AssignV "var5" "x"
----
2: AssignI "var6" 2
1: OP
----
1: if resp goto then2( x = 1)
2: OP
----
1: AssignI "resp" 1
2: AssignV "param" "resp"
----
2: AssignI "one" 1
1: goto
----
1: returning

MsgResponse {puIdR = 2, environmentR = "env_1", variableR = "var8", valueR = BaseValV (NumberV 1)}
2: GetClosureMissing "closure" "missing"
2: receive response
----
2: GetClosureCount "closure" "count"
----
2: OP
----
2: AssignV "new_missing" "resp"
----
2: OP
----
2: AssignV "new_count" "resp"
----
2: SetClosureCount "closure" "new_count"
----
2: SetClosureMissing "closure" "new_missing"
----
2: SetClosureParam "closure" "count" "param"
----
2: OP
----
2: if resp goto then1( x = 1)
----
2: AssignV "var7" "closure"
----
2: call
1: assignJob 
----
2: goto
2: receive ReqEnv
----
2: Wait
2: sending message for env copy
----
1: receive update
2: sending message for env copy
----
1: receive update
2: sending message for env copy
----
1: receive endCopy
----
1: GetClosureParam "closure" 1 "x"
----
1: AssignV "var0" "x"
----
1: AssignI "var1" 2
----
1: OP
----
1: if resp goto then2( x = 2)
----
1: AssignI "resp" 1
----
1: goto
----
1: returning

MsgResponse {puIdR = 2, environmentR = "env_1", variableR = "var9", valueR = BaseValV (NumberV 1)}
2: receive response
----
2: resuming
----
2: OP
----
2: goto
----
2: returning

MsgResponse {puIdR = 1, environmentR = "env_0", variableR = "resp", valueR = BaseValV (NumberV 2)}
1: receive response
----
1: resuming
----
1: returning

MsgResponse {puIdR = 0, environmentR = "0", variableR = "result", valueR = BaseValV (NumberV 2)}
0: receive response
Finished!
response: BaseValV (NumberV 2)
